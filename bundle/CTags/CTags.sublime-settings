// Place your settings in the file "User/CTags.sublime-settings", which
// overrides the settings in here.
{
    // Enable debugging.
    //
    // When enabled, this will result in debug output being printed to the
    // console. This can be useful for debugging issues.
    "debug": false,

    // Enable auto-complete.
    //
    // When enabled, this turns on a basic "auto-complete" feature, similar to
    // a very rudimentary "Intellisense(TM)". This is useful for providing
    // better suggestions than stock Sublime Text could provide.
    "autocomplete": false,

    // Path to ctags executable.
    //
    // Alter this value if your ctags command is not in the PATH, or if using
    // a different version of ctags to that in the path (i.e. for OSX).
    //
    // NOTE: You *should not* place entire commands here. These commands are
    // built automatically using the values below. For example, this is OK:
    //
    //     "command": "/usr/bin/ctags"
    //
    // This, on the other hand, won't work!
    //
    //     "command": "ctags -R -f .tags --exclude=some/path"
    //
    "command": "",

    // Enable recursive searching of directories when building tag files.
    //
    // When enabled, this is equivalent to `-R` parameter. Set to true to
    // enable recursive search of directories when generating tag files.
    "recursive" : true,

    // Default read/write location of the tags file.
    //
    // This is equivalent to the `-f [FILENAME]` parameter. There is likely no
    // reason to change this unless you have a large number of existing tags
    // files you'd like to use that already have a different name. In this
    // case perhaps consider using the 'extra_tag_files' setting instead.
    "tag_file" : ".tags",

    // Additional tag files names to search.
    //
    // These are searched in addition to the file name given in 'tag_file'
    "extra_tag_files": [".gemtags", "tags"],

    // Additional options to pass to ctags.
    //
    // Any addition options you may wish to pass to the ctags executable. For
    // example:
    //
    //     ["--exclude=some/path", "--exclude=some/other/path", ...]
    "opts" : [],

    // Tag "kind"s to ignore.
    //
    // A ctags tagfile describes a number of different "kind"s, described in
    // tag FORMAT file found here:
    //
    //     http://ctags.sourceforge.net/FORMAT
    //
    // These can be filtered (i.e. ignored). For example - 'import' statements
    // should be ignored in Python. These are of kind "i", e.g.
    //
    //     "type":"^i$"
    //
    "filters": {
        "source.python": {"type":"^i$"}
    },

    // Definition "kind"s to ignore.
    //
    // This is very similar to the 'filters' option. However, this only
    // applies to the process that is used to find a definition. All filters
    // placed here will be used when the plugin is searching for a definition
    // in the file.
    "definition_filters": {
        "source.php": {"type":"^v$"}
    },

    // Enable the ctags menu in the context menus.
    "show_context_menus": true,

    // Paths to additional tag files to include in tag search.
    //
    // This is a list of items in the following format:
    //
    //     [["language", "platform"], "path"]
    //
    "extra_tag_paths": [
        [["source.python", "windows"], "C:\\Python27\\Lib\\tags"]
    ],

    // Enable highlighting of selected symbol.
    //
    // When enabled, searched symbols will be highlighted when found. This
    // can be irritating in some instances, e.g. when in Vintage mode. In
    // these cases, setting this to false will disable this highlighting.
    "select_searched_symbol": true,

    // Set to false to not open an error dialog while tags are building
    "display_rebuilding_message": true
}
